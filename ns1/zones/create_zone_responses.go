// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mburtless/ns1-go/models"
)

// CreateZoneReader is a Reader for the CreateZone structure.
type CreateZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateZoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateZoneUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateZoneOK creates a CreateZoneOK with default headers values
func NewCreateZoneOK() *CreateZoneOK {
	return &CreateZoneOK{}
}

/*CreateZoneOK handles this case with default header values.

A single active zone
*/
type CreateZoneOK struct {
	Payload *models.Zone
}

func (o *CreateZoneOK) Error() string {
	return fmt.Sprintf("[PUT /zones/{zone}][%d] createZoneOK  %+v", 200, o.Payload)
}

func (o *CreateZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneBadRequest creates a CreateZoneBadRequest with default headers values
func NewCreateZoneBadRequest() *CreateZoneBadRequest {
	return &CreateZoneBadRequest{}
}

/*CreateZoneBadRequest handles this case with default header values.

Bad Request
*/
type CreateZoneBadRequest struct {
	Payload *models.Error
}

func (o *CreateZoneBadRequest) Error() string {
	return fmt.Sprintf("[PUT /zones/{zone}][%d] createZoneBadRequest  %+v", 400, o.Payload)
}

func (o *CreateZoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneUnauthorized creates a CreateZoneUnauthorized with default headers values
func NewCreateZoneUnauthorized() *CreateZoneUnauthorized {
	return &CreateZoneUnauthorized{}
}

/*CreateZoneUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateZoneUnauthorized struct {
	Payload *models.Error
}

func (o *CreateZoneUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /zones/{zone}][%d] createZoneUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateZoneUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
