// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mburtless/ns1-go-v3/models"
)

// ZonesByZoneGetReader is a Reader for the ZonesByZoneGet structure.
type ZonesByZoneGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZonesByZoneGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewZonesByZoneGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewZonesByZoneGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewZonesByZoneGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewZonesByZoneGetOK creates a ZonesByZoneGetOK with default headers values
func NewZonesByZoneGetOK() *ZonesByZoneGetOK {
	return &ZonesByZoneGetOK{}
}

/*ZonesByZoneGetOK handles this case with default header values.

A single active zone
*/
type ZonesByZoneGetOK struct {
	Payload *models.Zone
}

func (o *ZonesByZoneGetOK) Error() string {
	return fmt.Sprintf("[GET /zones/{zone}][%d] zonesByZoneGetOK  %+v", 200, o.Payload)
}

func (o *ZonesByZoneGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZonesByZoneGetBadRequest creates a ZonesByZoneGetBadRequest with default headers values
func NewZonesByZoneGetBadRequest() *ZonesByZoneGetBadRequest {
	return &ZonesByZoneGetBadRequest{}
}

/*ZonesByZoneGetBadRequest handles this case with default header values.

Bad Request
*/
type ZonesByZoneGetBadRequest struct {
	Payload *models.Error
}

func (o *ZonesByZoneGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /zones/{zone}][%d] zonesByZoneGetBadRequest  %+v", 400, o.Payload)
}

func (o *ZonesByZoneGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZonesByZoneGetNotFound creates a ZonesByZoneGetNotFound with default headers values
func NewZonesByZoneGetNotFound() *ZonesByZoneGetNotFound {
	return &ZonesByZoneGetNotFound{}
}

/*ZonesByZoneGetNotFound handles this case with default header values.

Zone not found
*/
type ZonesByZoneGetNotFound struct {
	Payload *models.Error
}

func (o *ZonesByZoneGetNotFound) Error() string {
	return fmt.Sprintf("[GET /zones/{zone}][%d] zonesByZoneGetNotFound  %+v", 404, o.Payload)
}

func (o *ZonesByZoneGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
