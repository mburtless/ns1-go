// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mburtless/ns1-go-v3/models"
)

// ZonesByZonePutReader is a Reader for the ZonesByZonePut structure.
type ZonesByZonePutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZonesByZonePutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewZonesByZonePutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewZonesByZonePutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewZonesByZonePutOK creates a ZonesByZonePutOK with default headers values
func NewZonesByZonePutOK() *ZonesByZonePutOK {
	return &ZonesByZonePutOK{}
}

/*ZonesByZonePutOK handles this case with default header values.

A single active zone
*/
type ZonesByZonePutOK struct {
	Payload *models.Zone
}

func (o *ZonesByZonePutOK) Error() string {
	return fmt.Sprintf("[PUT /zones/{zone}][%d] zonesByZonePutOK  %+v", 200, o.Payload)
}

func (o *ZonesByZonePutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZonesByZonePutBadRequest creates a ZonesByZonePutBadRequest with default headers values
func NewZonesByZonePutBadRequest() *ZonesByZonePutBadRequest {
	return &ZonesByZonePutBadRequest{}
}

/*ZonesByZonePutBadRequest handles this case with default header values.

Bad Request
*/
type ZonesByZonePutBadRequest struct {
	Payload *models.Error
}

func (o *ZonesByZonePutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /zones/{zone}][%d] zonesByZonePutBadRequest  %+v", 400, o.Payload)
}

func (o *ZonesByZonePutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
