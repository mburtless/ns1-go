// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mburtless/ns1-go/models"
)

// ModifyZoneReader is a Reader for the ModifyZone structure.
type ModifyZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewModifyZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewModifyZoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewModifyZoneOK creates a ModifyZoneOK with default headers values
func NewModifyZoneOK() *ModifyZoneOK {
	return &ModifyZoneOK{}
}

/*ModifyZoneOK handles this case with default header values.

A single active zone
*/
type ModifyZoneOK struct {
	Payload *models.Zone
}

func (o *ModifyZoneOK) Error() string {
	return fmt.Sprintf("[POST /zones/{zone}][%d] modifyZoneOK  %+v", 200, o.Payload)
}

func (o *ModifyZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyZoneBadRequest creates a ModifyZoneBadRequest with default headers values
func NewModifyZoneBadRequest() *ModifyZoneBadRequest {
	return &ModifyZoneBadRequest{}
}

/*ModifyZoneBadRequest handles this case with default header values.

Bad Request
*/
type ModifyZoneBadRequest struct {
	Payload models.BadRequest
}

func (o *ModifyZoneBadRequest) Error() string {
	return fmt.Sprintf("[POST /zones/{zone}][%d] modifyZoneBadRequest  %+v", 400, o.Payload)
}

func (o *ModifyZoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
