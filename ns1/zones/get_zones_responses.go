// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mburtless/ns1-go/models"
)

// GetZonesReader is a Reader for the GetZones structure.
type GetZonesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetZonesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetZonesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetZonesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetZonesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetZonesOK creates a GetZonesOK with default headers values
func NewGetZonesOK() *GetZonesOK {
	return &GetZonesOK{}
}

/*GetZonesOK handles this case with default header values.

A list of active zones
*/
type GetZonesOK struct {
	Payload models.Zones
}

func (o *GetZonesOK) Error() string {
	return fmt.Sprintf("[GET /zones][%d] getZonesOK  %+v", 200, o.Payload)
}

func (o *GetZonesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetZonesUnauthorized creates a GetZonesUnauthorized with default headers values
func NewGetZonesUnauthorized() *GetZonesUnauthorized {
	return &GetZonesUnauthorized{}
}

/*GetZonesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetZonesUnauthorized struct {
	Payload *models.Error
}

func (o *GetZonesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /zones][%d] getZonesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetZonesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetZonesDefault creates a GetZonesDefault with default headers values
func NewGetZonesDefault(code int) *GetZonesDefault {
	return &GetZonesDefault{
		_statusCode: code,
	}
}

/*GetZonesDefault handles this case with default header values.

unexpected error
*/
type GetZonesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get zones default response
func (o *GetZonesDefault) Code() int {
	return o._statusCode
}

func (o *GetZonesDefault) Error() string {
	return fmt.Sprintf("[GET /zones][%d] getZones default  %+v", o._statusCode, o.Payload)
}

func (o *GetZonesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
