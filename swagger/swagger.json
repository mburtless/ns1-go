{
  "swagger": "2.0",
  "info": {
    "description": "Manage your zones and records, data sources and feeds, account settings and users, and other aspects of your NS1 account.",
    "license": {
      "name": "MIT"
    },
    "title": "NS1",
    "version": "0.0.1"
  },
  "host": "api.nsone.net",
  "basePath": "/v1/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/zones": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of active zones",
            "schema": {
              "$ref": "#/definitions/Zones"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Returns all active zones and basic zone configuration details for each.",
        "operationId": "getZones",
        "summary": "Get list of active zones"
      }
    },
    "/zones/{zone}": {
      "parameters": [
        {
          "description": "The name of the zone to retrieve",
          "in": "path",
          "name": "zone",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single active zone",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Zone not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Returns a single active Zone and its basic configuration details. For convenience, a list of records in the zone, and some basic details of each record, is also included.",
        "operationId": "getZone",
        "summary": "Get a zone's details"
      },
      "post": {
        "produces": [
          "text/html"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single active zone",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Very long desc of modifying a zone.",
        "operationId": "modifyZone",
        "summary": "Modify a zone"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The zone to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single active zone",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Very long desc of creating a new zone.",
        "operationId": "createZone",
        "summary": "Create a new DNS zone"
      }
    }
  },
  "definitions": {
    "BadRequest": {
      "type": "string"
    },
    "Error": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "Metadata": {
      "properties": {
        "category": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "shortdesc": {
          "type": "string"
        }
      }
    },
    "Secondaries": {
      "properties": {
        "ip": {
          "type": "string"
        },
        "networks": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "notify": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "Zone": {
      "properties": {
        "dns_servers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expiry": {
          "type": "integer"
        },
        "hostmaster": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Metadata"
        },
        "network_pools": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "networks": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "nx_ttl": {
          "type": "integer"
        },
        "primary": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "secondaries": {
              "items": {
                "$ref": "#/definitions/Secondaries"
              },
              "type": "array"
            }
          },
          "required": [
            "enabled",
            "secondaries"
          ],
          "type": "object"
        },
        "records": {
          "items": {
            "properties": {
              "domain": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "short_answers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "tier": {
                "type": "integer"
              },
              "ttl": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type",
              "tier",
              "short_answers",
              "domain"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "refresh": {
          "type": "integer"
        },
        "retry": {
          "type": "integer"
        },
        "ttl": {
          "type": "integer"
        },
        "zone": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "hostmaster",
        "ttl",
        "nx_ttl",
        "retry",
        "zone",
        "refresh",
        "expiry",
        "dns_servers",
        "networks",
        "network_pools",
        "primary",
        "records",
        "meta"
      ]
    },
    "ZoneRequest": {
      "properties": {
        "dns_servers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expiry": {
          "type": "integer"
        },
        "hostmaster": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Metadata"
        },
        "network_pools": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "networks": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "nx_ttl": {
          "type": "integer"
        },
        "primary": {
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "secondaries": {
              "items": {
                "$ref": "#/definitions/Secondaries"
              },
              "type": "array"
            }
          },
          "required": [
            "enabled",
            "secondaries"
          ],
          "type": "object"
        },
        "records": {
          "items": {
            "properties": {
              "domain": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "short_answers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "tier": {
                "type": "integer"
              },
              "ttl": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "refresh": {
          "type": "integer"
        },
        "retry": {
          "type": "integer"
        },
        "ttl": {
          "type": "integer"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "Zones": {
      "items": {
        "$ref": "#/definitions/Zone"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "X-NSONE-Key": {
      "description": "Most API requests are authenticated with a simple API Key, which you must specify in the X-NSONE-Key request header. You can manage your API Keys in my.nsone.net. You should treat your API Keys as secrets! You should also give them only the minimal access needed for your application.",
      "in": "header",
      "name": "X-NSONE-Key",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "X-NSONE-Key": []
    }
  ],
  "x-components": {
    "parameters": {
      "zoneNameParam": {
        "description": "The name of the zone to retrieve",
        "in": "path",
        "name": "zone",
        "required": true,
        "type": "string"
      }
    },
    "responses": {
      "200Zone": {
        "description": "A single active zone",
        "schema": {
          "$ref": "#/definitions/Zone"
        }
      },
      "200Zones": {
        "description": "A list of active zones",
        "schema": {
          "$ref": "#/definitions/Zones"
        }
      },
      "400HTMLBadReq": {
        "description": "Bad Request",
        "schema": {
          "$ref": "#/definitions/BadRequest"
        }
      },
      "400JSONBadReq": {
        "description": "Bad Request",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "401Unauthorized": {
        "description": "Unauthorized",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "404ZoneNotFound": {
        "description": "Zone not found",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Default": {
        "description": "unexpected error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "requestBodies": {
      "zoneReqBody": {
        "description": "The zone to create",
        "in": "body",
        "name": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/ZoneRequest"
        }
      }
    }
  }
}
